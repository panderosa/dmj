<HTML>

<head>
    <style>
        .container {
            width: 80%;
            margin: 0 auto;
            overflow: scroll;
            /* needed to hide stuff outside the height/width */
            height: 600px;
        }

        .table {
            border-collapse: collapse;
            width: 100%;
            height: 100%;
        }

        .table,
        th,
        td {
            border: 1px solid lightgrey;
            padding: 10px;
        }

        .active {
            background-color: #D8DA5C
        }

        .table th {
            height: 25px;
            background-color: black;
            color: white;
        }

        .btn {
            background-color: green;
            color: white;
            padding: 8px 20px;
            border: none;
            cursor: pointer;
        }

        .text-center {
            text-align: center;
            vertical-align: center;
        }

        .hiddenfile {
            display: none;
        }
    </style>
</head>

<BODY>
    <div class="container">
        <table class="table" id="scroll-within-div">
            <thead>
                <tr>
                    <th colspan="3">
                        <div class="hiddenfile">
                            <input name="upload" type="file" class="uploadFile" accept=".js" />
                        </div>
                        <button type="button" class="btn view">View Script</button>
                        <button type="button" class="btn update">Update Script</button>
                        <button type="button" class="btn remove">Remove Script</button>
                        <button type="button" class="btn new">New Script</button>
                        <button type="button" class="btn refresh">Refresh Page</button>
                    </th>
                </tr>
                <tr>
                    <th>Name</th>
                    <th>Modified At</th>
                    <th>Length in Bytes</th>
                </tr>
            </thead>
            <tbody>
                <%                
                data.members.sort((a,b) => (a.name < b.name)? -1: (a.name > b.name)? 1: 0).forEach(i => { %>
                <tr>
                    <td class="text-center"><%= i.name %></td>
                    <td class="text-center"><%= i['@modified'] %></td>
                    <td class="text-center"><%= i['@content_length'] %></td>
                </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
    <script type="text/javascript" src="/<%= DMJ_HREF%>/static/scripts/jquery-3.4.0.slim.min.js"></script>
    <script type="text/javascript" src="/<%= DMJ_HREF%>/static/scripts/jquery.floatThead.min.js"></script>
    <script>
        $(document).ready(() => {
            const baseUrl = '<%= BASE_URL%>';
            let activeRow;
            let overwrite; // true for updating or false for new
            // scroll table
            $('#scroll-within-div').floatThead({});

            // View Script
            $('.btn.view').click(function () {
                if (activeRow) {
                    var scriptName = activeRow.find('td:eq(0)').text();
                    var httpRequest = new XMLHttpRequest();
                    httpRequest.onreadystatechange = function () {
                        if (httpRequest.readyState === XMLHttpRequest.DONE && httpRequest.status === 200) {
                            var scriptText = httpRequest.responseText;
                            var scriptWindow = window.open(scriptName, '_blank', 'height=900,width=600');
                            var scriptDocument = scriptWindow.document;
                            var scriptHTML = scriptText.replace(/\n/g, '<br/>');
                            scriptDocument.writeln(scriptHTML);
                        }
                        else if (httpRequest.readyState === XMLHttpRequest.DONE && httpRequest.status !== 200) {
                            alert(`Status Code: ${httpRequest.status}\n Status Text: ${httpRequest.statusText}`)
                        }
                    };
                    httpRequest.open('GET', `${baseUrl}/${scriptName}`, true);
                    httpRequest.send();
                }
                else {
                    alert('select script to view');
                }
            });

            $('.btn.remove').click(function () {
                if (activeRow) {
                    var scriptName = activeRow.find('td:eq(0)').text();
                    var httpRequest = new XMLHttpRequest();
                    httpRequest.onreadystatechange = function () {
                        if (httpRequest.readyState === XMLHttpRequest.DONE && httpRequest.status === 200) {
                            alert('script removed');
                        }
                        else if (httpRequest.readyState === XMLHttpRequest.DONE && httpRequest.status !== 200) {
                            alert(`Status Code: ${httpRequest.status}\n Status Text: ${httpRequest.statusText}`)
                        }
                    };
                    httpRequest.open('DELETE', `${baseUrl}/${scriptName}`, true);
                    httpRequest.send();
                }
                else {
                    alert('select script to remove');
                }
            });

            // Update Script
            $('.btn.update').click(function () {
                if (activeRow) {
                    overwrite = true;
                    $('.uploadFile').trigger('click');
                }
                else {
                    alert('select script to update');
                }
            });

            // New Script
            $('.btn.new').click(function () {
                overwrite = false;
                $('.uploadFile').trigger('click');
            });

            $('.uploadFile').change(function () {
                var formData = new FormData();
                var blob = this.files[0];
                if (overwrite) {
                    var scriptName = activeRow.find('td:eq(0)').text();
                    formData.append('scriptName', scriptName);
                }

                formData.append('script', blob);

                var httpRequest = new XMLHttpRequest();
                httpRequest.onreadystatechange = function () {
                    if (httpRequest.readyState === XMLHttpRequest.DONE && httpRequest.status === 200) {
                        alert("uploaded");
                    }
                    else if (httpRequest.readyState === XMLHttpRequest.DONE && httpRequest.status !== 200) {
                        alert(`Status Code: ${httpRequest.status}\n Status Text: ${httpRequest.statusText}\n Message: ${httpRequest.responseText}`)
                    }
                };
                httpRequest.open('POST', `${baseUrl}/upload`, true);
                httpRequest.send(formData);

            });

            $('.btn.refresh').click(function () {
                document.location.reload();
            });

            // Set Row Active 
            $(".table tbody tr").click(function () {
                scriptName = $(this).children('td:eq(0)').text();
                if ($(this).hasClass('active')) {
                    $(this).removeClass('active');
                    activeRow = undefined;
                }
                else {
                    if (activeRow) {
                        activeRow.removeClass('active');
                    }
                    $(this).addClass('active');
                    activeRow = $(this);
                }
            });

        });
    </script>
</BODY>

</HTML>